"use strict";angular.module("wgafApp",["ngAnimate","ngCookies","ngResource","ngRoute","ngSanitize","ngTouch","ui.router","config","angular-flash.service","angular-flash.flash-alert-directive","siyfion.sfTypeahead","angular-loading-bar","ui.utils","infinite-scroll","angularMoment","ngStorage","angular-google-analytics"]).config(["$stateProvider","$urlRouterProvider","$httpProvider","flashProvider","$locationProvider","AnalyticsProvider",function(a,b,c,d,e,f){a.state("cover",{url:"/",templateUrl:"views/cover.html",controller:"CoverCtrl"}).state("cover.sign-in",{url:"sign-in",templateUrl:"views/sign-in.html"}).state("cover.sign-up",{url:"sign-up",templateUrl:"views/sign-up.html"}).state("cover.sign-up.verify",{url:"",templateUrl:"views/verify-email.html"}).state("cover.forgot-password",{url:"forgot-password",templateUrl:"views/forgot-password.html",controller:"ForgotPasswordCtrl"}).state("cover.change-password",{url:"@:username/change-password?token",templateUrl:"views/change-password.html",controller:"ChangePasswordCtrl"}).state("main",{url:"/",templateUrl:"views/main.html",controller:"MainCtrl","abstract":!0}).state("main.dashboard",{url:"",templateUrl:"views/dashboard.html",controller:"DashboardCtrl"}).state("main.share",{url:"share",templateUrl:"views/share-link.html",controller:"ShareCtrl"}).state("main.follow",{url:"follow",templateUrl:"views/follow.html",controller:"FollowCtrl"}).state("main.profile",{url:"@:username",templateUrl:"views/main.profile.html",controller:"ProfileCtrl"}),b.otherwise("/"),c.interceptors.push("authInterceptor"),d.errorClassnames.push("alert-danger"),d.warnClassnames.push("alert-warn"),d.infoClassnames.push("alert-info"),d.successClassnames.push("alert-success"),e.html5Mode(!0),f.setAccount("UA-58070288-1"),f.trackPages(!0),f.useAnalytics(!0),f.useEnhancedLinkAttribution(!0),f.setPageEvent("$stateChangeSuccess")}]).run(["$state","$localStorage","$rootScope","Analytics",function(a,b,c){var d=[/^main/];c.$on("$stateChangeStart",function(c,e){for(var f=0;f<d.length;++f)d[f].test(e.name)&&!b.user&&(c.preventDefault(),a.go("cover"))}),b.user&&(c.user=b.user)}]),angular.module("config",[]).constant("ENV","production").constant("API","https://wgaf.herokuapp.com"),angular.module("wgafApp").directive("userSearch",["API",function(a){return{restrict:"E",scope:{model:"=",valid:"=",placeholder:"@?"},templateUrl:"views/user-search.html",controller:["$scope",function(b){b.valid=!1,b.placeholder=b.placeholder||"Username";var c=[],d=new Bloodhound({name:"users",remote:{url:a+"/users?search=%QUERY",filter:function(a){return b.$apply(function(){c=_.union(c,_.map(a,"username"))}),a}},datumTokenizer:function(a){return Bloodhound.tokenizers.whitespace(a.username)},queryTokenizer:Bloodhound.tokenizers.whitespace});d.initialize(),b.userData={name:"usernames",displayKey:"username",source:d.ttAdapter()},b.$watch(function(a){return{cache:c,model:a.model}},function(){b.valid=_.contains(c,b.model)},!0)}]}}]),angular.module("wgafApp").controller("MainCtrl",["$scope","$state","flash","$localStorage",function(a,b,c,d){a.user=d.user,a.signout=function(){delete d.user,delete a.user,c.success="Signed out",b.go("cover")}}]),angular.module("wgafApp").controller("AboutCtrl",["$scope",function(a){a.awesomeThings=["HTML5 Boilerplate","AngularJS","Karma"]}]),angular.module("wgafApp").controller("CoverCtrl",["$scope","$http","API","$log","$state","flash","$localStorage",function(a,b,c,d,e,f,g){g.user&&e.go("main.dashboard"),a.user={},a.signingIn=!1,a.signingUp=!1,a.signInText=function(){return a.signingIn?"Signing in...":"Sign in"},a.signUpText=function(){return a.signingUp?"Signing up...":"Sign up"},a.signIn=function(){delete a.signInError,a.signingIn=!0,b.post(c+"/auth",a.user).success(function(b){g.user={username:a.user.username,token:b.token},e.go("main.dashboard")}).error(function(b){delete g.token,a.signingIn=!1,"email not verified"===b.message?a.signInError=a.user.username+", please verify your email before signing in.":"bad auth"===b.message?a.signInError="Invalid username or password.":f.error="Something went wrong..."})},a.signUp=function(){delete a.signUpError,a.signingUp=!0,b.post(c+"/users",a.user).success(function(b){d.info("signed up: ",b),a.signingUp=!1,f.success="Account created",e.go("cover.sign-up.verify")}).error(function(b){"username already exists"===b.message&&(a.signUpError="Username is taken. Please pick another username."),a.signingUp=!1})}}]),angular.module("wgafApp").factory("authInterceptor",["$log","$q","$location","$localStorage",function(a,b,c,d){return{request:function(a){a.headers=a.headers||{};var b=d.user;return b&&(a.headers.Authorization="Bearer "+b.token),a},response:function(d){return 401===d.status&&(a.warn("Not authenticated: ",d),c.path("/sign-in")),d||b.when(d)}}}]),angular.module("wgafApp").controller("ShareCtrl",["$scope","$window","$http","API","flash","$log",function(a,b,c,d,e,f){a.share={url:null,summary:"",reset:function(){this.url=null,this.summary=null}},a.sharing=!1,a.shareLink=function(b){a.sharing=!0,c.post(d+"/users/"+a.user.username+"/links",a.share).success(function(){e.success="Link added",a.share.reset(),b.$setPristine()}).error(function(a){e.error="Something went wrong...",f.error(a)})["finally"](function(){a.sharing=!1})}}]),angular.module("wgafApp").controller("FollowCtrl",["$scope","$http","API","flash","$log",function(a,b,c,d,e){a.follow={username:null,valid:!1,reset:function(){this.username=null,this.valid=!1}},a.following=!1,a.followUser=function(){a.following=!0,b.post(c+"/users/"+a.user.username+"/following",{target:a.follow.username}).success(function(){d.success="Following "+a.follow.username,a.follow.reset()}).error(function(b){e.error("Error following user: ",b),/^already following/.test(b.message)&&(d.info="Already following "+a.follow.username,a.follow.reset())})["finally"](function(){a.following=!1})}}]),angular.module("wgafApp").controller("DashboardCtrl",function(){}),angular.module("wgafApp").controller("ProfileCtrl",["$scope","$http","$stateParams","$log","flash","API","db",function(a,b,c,d,e,f,g){a.profile=g.profiles[c.username]||{username:c.username,loading:!0};var h=function(a,b){return a.toLowerCase().localeCompare(b.toLowerCase())};b.get(f+"/users/"+c.username).success(function(b){a.profile=b,a.profile.followers=b.followers.sort(h),a.profile.following=b.following.sort(h),g.profiles[c.username]=a.profile}).error(function(a){d.error(a),e.error="Something went wrong..."})}]),angular.module("wgafApp").service("db",function(){this.links={},this.profiles={}}),angular.module("wgafApp").factory("linksLoader",["db","flash","$http","API","$log",function(a,b,c,d,e){return{instantiate:function(f){return{links:a.links[f]||[],busy:!1,page:0,limit:null,done:!1,username:f,loadLinks:function(){var f=this;if(!f.busy){if(f.page>0&&f.limit&&f.links.length>=f.limit)return void(f.done=!0);f.busy=!0,c.get(d+"/users/"+f.username+"/links?page="+f.page+"&limit=40").success(function(b){b.length<40&&(f.done=!0,0===b.length)||(0===f.page&&(f.links=[]),f.links=_.uniq(_.sortBy(f.links.concat(b),function(a){return-a.time}),!0,"time"),a.links[f.username]=f.links,f.page+=1)}).error(function(a){b.error="Something went wrong...",e.error(a),f.done=!0})["finally"](function(){f.busy=!1})}}}}}}]),angular.module("wgafApp").directive("links",["linksLoader",function(a){return{templateUrl:"views/links.html",restrict:"E",scope:{username:"=",limit:"=?"},link:function(b){b.loader=a.instantiate(b.username),angular.isDefined(b.limit)&&(b.loader.limit=b.limit),b.loader.loadLinks()}}}]),angular.module("wgafApp").controller("ForgotPasswordCtrl",["$scope","$log","API","flash","$http",function(a,b,c,d,e){a.forgot={email:null,valid:!1,processing:!1,submit:function(){var a=this;a.processing=!0,e.post(c+"/users/forgot-password",{email:a.email}).success(function(){d.success="Password reset email sent. Please follow the instructions there.",a.reset()}).error(function(a){b.info(a),d.error="Something went wrong..."})["finally"](function(){a.processing=!1})},reset:function(){this.username=null,this.valid=!1,this.processing=!1}}}]),angular.module("wgafApp").controller("ChangePasswordCtrl",["$scope","$log","$stateParams","$http","flash","$state","API",function(a,b,c,d,e,f,g){a.change={password:null,confirmPassword:null,processing:!1,submit:function(){this.processing=!0;var a=this;d.post(g+"/users/"+c.username+"/change-password",{password:a.password,token:c.token}).success(function(){e.success="Password changed successfully",f.go("cover.sign-in")}).error(function(a){b.error(a),e.error="Something went wrong..."})["finally"](function(){a.processing=!1})}},a.username=c.username}]),angular.module("wgafApp").run(["$templateCache",function(a){a.put("views/about.html","<p>This is the about view.</p>\n"),a.put("views/change-password.html",'<form role="form" name="changePasswordForm">\n    <div class="form-group">\n      <input type="password" class="form-control" placeholder="New password" ng-model="change.password" required="true" ng-minlength="4">\n    </div>\n    <div class="form-group">\n      <input type="password" class="form-control" placeholder="Confirm password" ng-model="change.confirmPassword" required="true" ui-validate="\'$value===change.password\'" ui-validate-watch="\'change.password\'">\n    </div>\n    <div class="form-group">\n      <button ng-disabled="change.processing || changePasswordForm.$invalid" type="submit" class="btn btn-default btn-lg" ng-click="change.submit()">Change password</button>\n    </div>\n</form>\n'),a.put("views/cover.html",'<div class="banner">\n  <h1><a ui-sref="cover">w.g.a.f</a></h1>\n  <p>No nonsense web curation tool. Get one email daily, with updates from the people you choose.</p>\n</div>\n\n<div class="action">\n  <div ui-view>\n        <button type="button" class="btn btn-default btn-lg" ui-sref=".sign-up">Sign up</button>\n        <div>\n            or <a ui-sref=".sign-in">Sign in</a>\n        </div>\n    </div>\n</div>\n'),a.put("views/dashboard.html",'<links username="user.username"/>\n'),a.put("views/follow.html",'<form role="form" class="wgaf-action-form wgaf-follow-form form-inline">\n  <div class="form-group">\n    <user-search model="follow.username" valid="follow.valid"/>\n  </div>\n  <button ng-disabled="following || !follow.valid || follow.username === user.username" type="submit" class="btn btn-default btn-lg" ng-click="followUser()">Follow</button>\n</form>\n'),a.put("views/forgot-password.html",'<form role="form" class="form-inline wgaf-action-form" name="forgotPasswordForm">\n  <div class="form-group">\n    <input ng-model="forgot.email" type="email" class="form-control" required="true" placeholder="Email"/>\n  </div>\n  <div class="form-group">\n    <button ng-disabled="forgot.processing || forgotPasswordForm.$invalid" type="submit" class="btn btn-default btn-lg" ng-click="forgot.submit()">Reset password</button>\n  </div>\n</form>\n'),a.put("views/links.html",'<div class="links-list" infinite-scroll="loader.loadLinks()" infinite-scroll-distance="2" infinite-scroll-disabled="loader.busy || loader.done">\n\n  <div class="link-item" ng-repeat="link in loader.links">\n    <a class="link" href="{{link.url}}" target="_blank">{{link.url}}</a>\n    <span ng-if="link.summary"> - <em>{{link.summary}}</em></span>\n    <span class="time" am-time-ago="link.time"></span>\n    <hr ng-if="!$last"/>\n  </div>\n\n  <div class="link-item" ng-show="loader.busy">Loading...</div>\n  <div class="link-item" ng-show="!loader.busy && loader.links.length === 0"><em>None</em></div>\n\n</div>\n'),a.put("views/main.html",'<div class="header">\n  <h1><a class="home" ui-sref="main.dashboard">w.g.a.f</a></h1>\n  <div>\n    Hello, <a ui-sref="main.profile({username: user.username})">{{user.username}}</a>.\n    <ul class="nav-list pull-right">\n      <li><a ui-sref="main.share">Share link</a></li>\n      <li><a ui-sref="main.follow">Follow</a></li>\n      <li><a ng-click="signout()">Sign out</a></li>\n    </ul>\n  </div>\n</div>\n\n<div ui-view>\n  <p>Get started by sharing a link, or following a user.</p>\n</div>\n'),a.put("views/main.profile.html",'<h2 ng-if="profile.username !== user.username">{{profile.username}}</h2>\n\n<div class="following">\n  <h4>Following<span ng-show="profile.following"> ({{profile.following.length}})</span>:</h4>\n  <p ng-show="profile.loading">Loading...</p>\n  <p ng-if="profile.following.length === 0"><em>Nobody</em></p>\n  <p ng-if="profile.following.length > 0">\n    <span ng-repeat="username in profile.following">\n      <a ui-sref="main.profile({username: username})">{{username}}</a><span ng-if="!$last" class="comma">, </span>\n    </span>\n  </p>\n</div>\n\n<div class="followers">\n  <h4>Followers<span ng-show="profile.followers"> ({{profile.followers.length}})</span>:</h4>\n  <p ng-show="profile.loading">Loading...</p>\n  <p ng-if="profile.followers.length === 0"><em>Nobody</em></p>\n  <p ng-if="profile.followers.length > 0">\n    <span ng-repeat="username in profile.followers">\n      <a ui-sref="main.profile({username: username})">{{username}}</a><span ng-if="!$last" class="comma">, </span>\n    </span>\n  </p>\n</div>\n\n<div class="recent" ng-if="profile.username !== user.username">\n  <h4>Recently shared:</h4>\n  <links username="profile.username" limit="10"/>\n</div>\n'),a.put("views/share-link.html",'<form role="form" name="shareForm" class="wgaf-action-form wgaf-share-link-form">\n  <div class="form-group">\n    <input ng-model="share.url" type="url" placeholder="Link" class="form-control"\n           required="true"/>\n  </div>\n  <div class="form-group">\n    <textarea ng-model="share.summary" rows="2" placeholder="A short summary, if you like." ng-maxlength="160" class="form-control"></textarea>\n  </div>\n  <div class="action">\n    <button ng-disabled="sharing || shareForm.$invalid" type="button" class="btn btn-default btn-lg" ng-click="shareLink(shareForm)">g.a.f</button>\n  </div>\n</form>\n'),a.put("views/sign-in.html",'<form role="form" name="signInForm">\n  <p class="text-danger" ng-if="signInError">{{signInError}}</p>\n    <div class="form-group">\n      <input type="text" class="form-control" placeholder="Username" ng-model="user.username" required="true">\n    </div>\n    <div class="form-group">\n      <input type="password" class="form-control" placeholder="Password" ng-model="user.password" required="true">\n    </div>\n    <div class="action">\n        <button ng-disabled="signingIn || signInForm.$invalid" type="submit" class="btn btn-default btn-lg" ng-click="signIn()">{{signInText()}}</button>\n        <div ng-hide="signingIn">\n            <a ui-sref="cover.sign-up">Sign up</a> | <a ui-sref="cover.forgot-password">Forgot password</a>\n        </div>\n    </div>\n\n</form>\n'),a.put("views/sign-up.html",'<div ui-view>\n  <form role="form" name="signUpForm" show-validation>\n    <p class="text-danger" ng-if="signUpError">{{signUpError}}</p>\n    <div class="form-group">\n        <input type="email" class="form-control" placeholder="Email" ng-model="user.email" required="true">\n    </div>\n    <div class="form-group">\n        <input type="text" class="form-control" placeholder="Username" ng-model="user.username" required="true" pattern="^[A-Za-z][_A-Za-z0-9]*$">\n    </div>\n    <div class="form-group">\n        <input type="password" class="form-control" placeholder="Password" ng-model="user.password" required="true" ng-minlength="4">\n    </div>\n    <div class="form-group">\n        <input type="password" class="form-control" placeholder="Confirm password" ng-model="user.confirmPassword" ui-validate="\'$value===user.password\'" ui-validate-watch="\'user.password\'">\n    </div>\n\n    <div class="action">\n        <button ng-disabled="signingUp || signUpForm.$invalid" type="submit" class="btn btn-default btn-lg" ng-click="signUp()">{{signUpText()}}</button>\n        <div ng-hide="signingUp">\n            or <a ui-sref="cover.sign-in">Sign in</a>\n        </div>\n    </div>\n</form>\n</div>\n'),a.put("views/user-search.html",'<input type="text"\n       class="form-control"\n       placeholder="{{placeholder}}"\n       ng-model="model"\n       datasets="userData"\n       options="{highlight:true}"\n       sf-typeahead\n       suggestion-key="username" />\n'),a.put("views/verify-email.html","<p><strong>{{user.username}}</strong>, your account has been created. We have sent a verification email to <strong>{{user.email}}</strong>. Please verify your email before signing in.</p>\n")}]);